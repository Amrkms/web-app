#!groovy
// Run docker build1112
properties([disableConcurrentBuilds()])

pipeline {
    agent any
    triggers { pollSCM('* * * * *') }
    options {
        buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
        timestamps()
    }
    stages {

        stage("Start Python test")  {
            steps {
                echo " ============== python tests =================="

               dir ('') {
                	sh """sudo pip install -e '.[test]' --ignore-installed"""
                        sh """sudo coverage run -m pytest"""
                        sh """sudo coverage report"""
                }
            }
        }
 




        stage("docker login") {
            steps {
                echo " ============== docker login =================="
                withCredentials([usernamePassword(credentialsId: 'dockerhub_mironenko', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                    sh """uptime"""
                    sh """docker login -u $USERNAME -p $PASSWORD"""
//                    sh """docker login -u andrmir -p Rjhktjyt2019"""
                    
                }
            }
        }
        stage("create docker image") {
            steps {
                echo " ============== start building image =================="
                dir ('docker') {
                	sh 'docker build -t andrmir/private:webapp . '
                }
            }
        }
        stage("docker push") {
            steps {
                echo " ============== start pushing image =================="
                sh '''
                docker push andrmir/private:webapp 
                '''
            }
        }
    }
}
